// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package com.google.protobuf.descriptor

/** @param javaPackage
  *   Sets the Java package where classes generated from this .proto will be
  *   placed.  By default, the proto package is used, but this is often
  *   inappropriate because proto packages do not normally start with backwards
  *   domain names.
  * @param javaOuterClassname
  *   If set, all the classes from the .proto file are wrapped in a single
  *   outer class with the given name.  This applies to both Proto1
  *   (equivalent to the old "--one_java_file" option) and Proto2 (where
  *   a .proto always translates to a single class, but you may want to
  *   explicitly choose the class name).
  * @param javaMultipleFiles
  *   If set true, then the Java code generator will generate a separate .java
  *   file for each top-level message, enum, and service defined in the .proto
  *   file.  Thus, these types will *not* be nested inside the outer class
  *   named by java_outer_classname.  However, the outer class will still be
  *   generated to contain the file's getDescriptor() method as well as any
  *   top-level extensions defined in the file.
  * @param javaGenerateEqualsAndHash
  *   This option does nothing.
  * @param javaStringCheckUtf8
  *   If set true, then the Java2 code generator will generate code that
  *   throws an exception whenever an attempt is made to assign a non-UTF-8
  *   byte sequence to a string field.
  *   Message reflection will do the same.
  *   However, an extension field still accepts non-UTF-8 byte sequences.
  *   This option has no effect on when used with the lite runtime.
  * @param goPackage
  *   Sets the Go package where structs generated from this .proto will be
  *   placed. If omitted, the Go package will be derived from the following:
  *     - The basename of the package import path, if provided.
  *     - Otherwise, the package statement in the .proto file, if present.
  *     - Otherwise, the basename of the .proto file, without extension.
  * @param ccGenericServices
  *   Should generic services be generated in each language?  "Generic" services
  *   are not specific to any particular RPC system.  They are generated by the
  *   main code generators in each language (without additional plugins).
  *   Generic services were the only kind of service generation supported by
  *   early versions of google.protobuf.
  *  
  *   Generic services are now considered deprecated in favor of using plugins
  *   that generate code specific to your particular RPC system.  Therefore,
  *   these default to false.  Old code which depends on generic services should
  *   explicitly set them to true.
  * @param deprecated
  *   Is this file deprecated?
  *   Depending on the target platform, this can emit Deprecated annotations
  *   for everything in the file, or it will be completely ignored; in the very
  *   least, this is a formalization for deprecating files.
  * @param ccEnableArenas
  *   Enables the use of arenas for the proto messages in this file. This applies
  *   only to generated classes for C++.
  * @param objcClassPrefix
  *   Sets the objective c class prefix which is prepended to all objective c
  *   generated classes from this .proto. There is no default.
  * @param csharpNamespace
  *   Namespace for generated classes; defaults to the package.
  * @param swiftPrefix
  *   By default Swift generators will take the proto package and CamelCase it
  *   replacing '.' with underscore and use that to prefix the types/symbols
  *   defined. When this options is provided, they will use this value instead
  *   to prefix the types/symbols defined.
  * @param phpClassPrefix
  *   Sets the php class prefix which is prepended to all php generated classes
  *   from this .proto. Default is empty.
  * @param phpNamespace
  *   Use this option to change the namespace of php generated classes. Default
  *   is empty. When this option is empty, the package name will be used for
  *   determining the namespace.
  * @param phpMetadataNamespace
  *   Use this option to change the namespace of php generated metadata classes.
  *   Default is empty. When this option is empty, the proto file name will be
  *   used for determining the namespace.
  * @param rubyPackage
  *   Use this option to change the package of ruby generated classes. Default
  *   is empty. When this option is not set, the package name will be used for
  *   determining the ruby package.
  * @param uninterpretedOption
  *   The parser stores options it doesn't recognize here.
  *   See the documentation for the "Options" section above.
  */
@SerialVersionUID(0L)
final case class FileOptions(
    javaPackage: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    javaOuterClassname: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    javaMultipleFiles: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None,
    @scala.deprecated(message="Marked as deprecated in proto file", "") javaGenerateEqualsAndHash: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None,
    javaStringCheckUtf8: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None,
    optimizeFor: _root_.scala.Option[com.google.protobuf.descriptor.FileOptions.OptimizeMode] = _root_.scala.None,
    goPackage: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    ccGenericServices: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None,
    javaGenericServices: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None,
    pyGenericServices: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None,
    phpGenericServices: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None,
    deprecated: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None,
    ccEnableArenas: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None,
    objcClassPrefix: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    csharpNamespace: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    swiftPrefix: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    phpClassPrefix: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    phpNamespace: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    phpMetadataNamespace: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    rubyPackage: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None,
    uninterpretedOption: _root_.scala.Seq[com.google.protobuf.descriptor.UninterpretedOption] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[FileOptions] with _root_.scalapb.ExtendableMessage[FileOptions] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      if (javaPackage.isDefined) {
        val __value = javaPackage.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
      };
      if (javaOuterClassname.isDefined) {
        val __value = javaOuterClassname.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(8, __value)
      };
      if (javaMultipleFiles.isDefined) {
        val __value = javaMultipleFiles.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(10, __value)
      };
      if (javaGenerateEqualsAndHash.isDefined) {
        val __value = javaGenerateEqualsAndHash.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(20, __value)
      };
      if (javaStringCheckUtf8.isDefined) {
        val __value = javaStringCheckUtf8.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(27, __value)
      };
      if (optimizeFor.isDefined) {
        val __value = optimizeFor.get.value
        __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(9, __value)
      };
      if (goPackage.isDefined) {
        val __value = goPackage.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(11, __value)
      };
      if (ccGenericServices.isDefined) {
        val __value = ccGenericServices.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(16, __value)
      };
      if (javaGenericServices.isDefined) {
        val __value = javaGenericServices.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(17, __value)
      };
      if (pyGenericServices.isDefined) {
        val __value = pyGenericServices.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(18, __value)
      };
      if (phpGenericServices.isDefined) {
        val __value = phpGenericServices.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(42, __value)
      };
      if (deprecated.isDefined) {
        val __value = deprecated.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(23, __value)
      };
      if (ccEnableArenas.isDefined) {
        val __value = ccEnableArenas.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(31, __value)
      };
      if (objcClassPrefix.isDefined) {
        val __value = objcClassPrefix.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(36, __value)
      };
      if (csharpNamespace.isDefined) {
        val __value = csharpNamespace.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(37, __value)
      };
      if (swiftPrefix.isDefined) {
        val __value = swiftPrefix.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(39, __value)
      };
      if (phpClassPrefix.isDefined) {
        val __value = phpClassPrefix.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(40, __value)
      };
      if (phpNamespace.isDefined) {
        val __value = phpNamespace.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(41, __value)
      };
      if (phpMetadataNamespace.isDefined) {
        val __value = phpMetadataNamespace.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(44, __value)
      };
      if (rubyPackage.isDefined) {
        val __value = rubyPackage.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(45, __value)
      };
      uninterpretedOption.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      javaPackage.foreach { __v =>
        val __m = __v
        _output__.writeString(1, __m)
      };
      javaOuterClassname.foreach { __v =>
        val __m = __v
        _output__.writeString(8, __m)
      };
      optimizeFor.foreach { __v =>
        val __m = __v.value
        _output__.writeEnum(9, __m)
      };
      javaMultipleFiles.foreach { __v =>
        val __m = __v
        _output__.writeBool(10, __m)
      };
      goPackage.foreach { __v =>
        val __m = __v
        _output__.writeString(11, __m)
      };
      ccGenericServices.foreach { __v =>
        val __m = __v
        _output__.writeBool(16, __m)
      };
      javaGenericServices.foreach { __v =>
        val __m = __v
        _output__.writeBool(17, __m)
      };
      pyGenericServices.foreach { __v =>
        val __m = __v
        _output__.writeBool(18, __m)
      };
      javaGenerateEqualsAndHash.foreach { __v =>
        val __m = __v
        _output__.writeBool(20, __m)
      };
      deprecated.foreach { __v =>
        val __m = __v
        _output__.writeBool(23, __m)
      };
      javaStringCheckUtf8.foreach { __v =>
        val __m = __v
        _output__.writeBool(27, __m)
      };
      ccEnableArenas.foreach { __v =>
        val __m = __v
        _output__.writeBool(31, __m)
      };
      objcClassPrefix.foreach { __v =>
        val __m = __v
        _output__.writeString(36, __m)
      };
      csharpNamespace.foreach { __v =>
        val __m = __v
        _output__.writeString(37, __m)
      };
      swiftPrefix.foreach { __v =>
        val __m = __v
        _output__.writeString(39, __m)
      };
      phpClassPrefix.foreach { __v =>
        val __m = __v
        _output__.writeString(40, __m)
      };
      phpNamespace.foreach { __v =>
        val __m = __v
        _output__.writeString(41, __m)
      };
      phpGenericServices.foreach { __v =>
        val __m = __v
        _output__.writeBool(42, __m)
      };
      phpMetadataNamespace.foreach { __v =>
        val __m = __v
        _output__.writeString(44, __m)
      };
      rubyPackage.foreach { __v =>
        val __m = __v
        _output__.writeString(45, __m)
      };
      uninterpretedOption.foreach { __v =>
        val __m = __v
        _output__.writeTag(999, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getJavaPackage: _root_.scala.Predef.String = javaPackage.getOrElse("")
    def clearJavaPackage: FileOptions = copy(javaPackage = _root_.scala.None)
    def withJavaPackage(__v: _root_.scala.Predef.String): FileOptions = copy(javaPackage = Option(__v))
    def getJavaOuterClassname: _root_.scala.Predef.String = javaOuterClassname.getOrElse("")
    def clearJavaOuterClassname: FileOptions = copy(javaOuterClassname = _root_.scala.None)
    def withJavaOuterClassname(__v: _root_.scala.Predef.String): FileOptions = copy(javaOuterClassname = Option(__v))
    def getJavaMultipleFiles: _root_.scala.Boolean = javaMultipleFiles.getOrElse(false)
    def clearJavaMultipleFiles: FileOptions = copy(javaMultipleFiles = _root_.scala.None)
    def withJavaMultipleFiles(__v: _root_.scala.Boolean): FileOptions = copy(javaMultipleFiles = Option(__v))
    def getJavaGenerateEqualsAndHash: _root_.scala.Boolean = javaGenerateEqualsAndHash.getOrElse(false)
    def clearJavaGenerateEqualsAndHash: FileOptions = copy(javaGenerateEqualsAndHash = _root_.scala.None)
    def withJavaGenerateEqualsAndHash(__v: _root_.scala.Boolean): FileOptions = copy(javaGenerateEqualsAndHash = Option(__v))
    def getJavaStringCheckUtf8: _root_.scala.Boolean = javaStringCheckUtf8.getOrElse(false)
    def clearJavaStringCheckUtf8: FileOptions = copy(javaStringCheckUtf8 = _root_.scala.None)
    def withJavaStringCheckUtf8(__v: _root_.scala.Boolean): FileOptions = copy(javaStringCheckUtf8 = Option(__v))
    def getOptimizeFor: com.google.protobuf.descriptor.FileOptions.OptimizeMode = optimizeFor.getOrElse(com.google.protobuf.descriptor.FileOptions.OptimizeMode.SPEED)
    def clearOptimizeFor: FileOptions = copy(optimizeFor = _root_.scala.None)
    def withOptimizeFor(__v: com.google.protobuf.descriptor.FileOptions.OptimizeMode): FileOptions = copy(optimizeFor = Option(__v))
    def getGoPackage: _root_.scala.Predef.String = goPackage.getOrElse("")
    def clearGoPackage: FileOptions = copy(goPackage = _root_.scala.None)
    def withGoPackage(__v: _root_.scala.Predef.String): FileOptions = copy(goPackage = Option(__v))
    def getCcGenericServices: _root_.scala.Boolean = ccGenericServices.getOrElse(false)
    def clearCcGenericServices: FileOptions = copy(ccGenericServices = _root_.scala.None)
    def withCcGenericServices(__v: _root_.scala.Boolean): FileOptions = copy(ccGenericServices = Option(__v))
    def getJavaGenericServices: _root_.scala.Boolean = javaGenericServices.getOrElse(false)
    def clearJavaGenericServices: FileOptions = copy(javaGenericServices = _root_.scala.None)
    def withJavaGenericServices(__v: _root_.scala.Boolean): FileOptions = copy(javaGenericServices = Option(__v))
    def getPyGenericServices: _root_.scala.Boolean = pyGenericServices.getOrElse(false)
    def clearPyGenericServices: FileOptions = copy(pyGenericServices = _root_.scala.None)
    def withPyGenericServices(__v: _root_.scala.Boolean): FileOptions = copy(pyGenericServices = Option(__v))
    def getPhpGenericServices: _root_.scala.Boolean = phpGenericServices.getOrElse(false)
    def clearPhpGenericServices: FileOptions = copy(phpGenericServices = _root_.scala.None)
    def withPhpGenericServices(__v: _root_.scala.Boolean): FileOptions = copy(phpGenericServices = Option(__v))
    def getDeprecated: _root_.scala.Boolean = deprecated.getOrElse(false)
    def clearDeprecated: FileOptions = copy(deprecated = _root_.scala.None)
    def withDeprecated(__v: _root_.scala.Boolean): FileOptions = copy(deprecated = Option(__v))
    def getCcEnableArenas: _root_.scala.Boolean = ccEnableArenas.getOrElse(true)
    def clearCcEnableArenas: FileOptions = copy(ccEnableArenas = _root_.scala.None)
    def withCcEnableArenas(__v: _root_.scala.Boolean): FileOptions = copy(ccEnableArenas = Option(__v))
    def getObjcClassPrefix: _root_.scala.Predef.String = objcClassPrefix.getOrElse("")
    def clearObjcClassPrefix: FileOptions = copy(objcClassPrefix = _root_.scala.None)
    def withObjcClassPrefix(__v: _root_.scala.Predef.String): FileOptions = copy(objcClassPrefix = Option(__v))
    def getCsharpNamespace: _root_.scala.Predef.String = csharpNamespace.getOrElse("")
    def clearCsharpNamespace: FileOptions = copy(csharpNamespace = _root_.scala.None)
    def withCsharpNamespace(__v: _root_.scala.Predef.String): FileOptions = copy(csharpNamespace = Option(__v))
    def getSwiftPrefix: _root_.scala.Predef.String = swiftPrefix.getOrElse("")
    def clearSwiftPrefix: FileOptions = copy(swiftPrefix = _root_.scala.None)
    def withSwiftPrefix(__v: _root_.scala.Predef.String): FileOptions = copy(swiftPrefix = Option(__v))
    def getPhpClassPrefix: _root_.scala.Predef.String = phpClassPrefix.getOrElse("")
    def clearPhpClassPrefix: FileOptions = copy(phpClassPrefix = _root_.scala.None)
    def withPhpClassPrefix(__v: _root_.scala.Predef.String): FileOptions = copy(phpClassPrefix = Option(__v))
    def getPhpNamespace: _root_.scala.Predef.String = phpNamespace.getOrElse("")
    def clearPhpNamespace: FileOptions = copy(phpNamespace = _root_.scala.None)
    def withPhpNamespace(__v: _root_.scala.Predef.String): FileOptions = copy(phpNamespace = Option(__v))
    def getPhpMetadataNamespace: _root_.scala.Predef.String = phpMetadataNamespace.getOrElse("")
    def clearPhpMetadataNamespace: FileOptions = copy(phpMetadataNamespace = _root_.scala.None)
    def withPhpMetadataNamespace(__v: _root_.scala.Predef.String): FileOptions = copy(phpMetadataNamespace = Option(__v))
    def getRubyPackage: _root_.scala.Predef.String = rubyPackage.getOrElse("")
    def clearRubyPackage: FileOptions = copy(rubyPackage = _root_.scala.None)
    def withRubyPackage(__v: _root_.scala.Predef.String): FileOptions = copy(rubyPackage = Option(__v))
    def clearUninterpretedOption = copy(uninterpretedOption = _root_.scala.Seq.empty)
    def addUninterpretedOption(__vs: com.google.protobuf.descriptor.UninterpretedOption*): FileOptions = addAllUninterpretedOption(__vs)
    def addAllUninterpretedOption(__vs: Iterable[com.google.protobuf.descriptor.UninterpretedOption]): FileOptions = copy(uninterpretedOption = uninterpretedOption ++ __vs)
    def withUninterpretedOption(__v: _root_.scala.Seq[com.google.protobuf.descriptor.UninterpretedOption]): FileOptions = copy(uninterpretedOption = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => javaPackage.orNull
        case 8 => javaOuterClassname.orNull
        case 10 => javaMultipleFiles.orNull
        case 20 => javaGenerateEqualsAndHash.orNull
        case 27 => javaStringCheckUtf8.orNull
        case 9 => optimizeFor.map(_.javaValueDescriptor).orNull
        case 11 => goPackage.orNull
        case 16 => ccGenericServices.orNull
        case 17 => javaGenericServices.orNull
        case 18 => pyGenericServices.orNull
        case 42 => phpGenericServices.orNull
        case 23 => deprecated.orNull
        case 31 => ccEnableArenas.orNull
        case 36 => objcClassPrefix.orNull
        case 37 => csharpNamespace.orNull
        case 39 => swiftPrefix.orNull
        case 40 => phpClassPrefix.orNull
        case 41 => phpNamespace.orNull
        case 44 => phpMetadataNamespace.orNull
        case 45 => rubyPackage.orNull
        case 999 => uninterpretedOption
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => javaPackage.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => javaOuterClassname.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 10 => javaMultipleFiles.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 20 => javaGenerateEqualsAndHash.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 27 => javaStringCheckUtf8.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 9 => optimizeFor.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 11 => goPackage.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 16 => ccGenericServices.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 17 => javaGenericServices.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 18 => pyGenericServices.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 42 => phpGenericServices.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 23 => deprecated.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 31 => ccEnableArenas.map(_root_.scalapb.descriptors.PBoolean).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 36 => objcClassPrefix.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 37 => csharpNamespace.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 39 => swiftPrefix.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 40 => phpClassPrefix.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 41 => phpNamespace.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 44 => phpMetadataNamespace.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 45 => rubyPackage.map(_root_.scalapb.descriptors.PString).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 999 => _root_.scalapb.descriptors.PRepeated(uninterpretedOption.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.google.protobuf.descriptor.FileOptions
}

object FileOptions extends scalapb.GeneratedMessageCompanion[com.google.protobuf.descriptor.FileOptions] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[com.google.protobuf.descriptor.FileOptions] = this
  def merge(`_message__`: com.google.protobuf.descriptor.FileOptions, `_input__`: _root_.com.google.protobuf.CodedInputStream): com.google.protobuf.descriptor.FileOptions = {
    var __javaPackage = `_message__`.javaPackage
    var __javaOuterClassname = `_message__`.javaOuterClassname
    var __javaMultipleFiles = `_message__`.javaMultipleFiles
    var __javaGenerateEqualsAndHash = `_message__`.javaGenerateEqualsAndHash
    var __javaStringCheckUtf8 = `_message__`.javaStringCheckUtf8
    var __optimizeFor = `_message__`.optimizeFor
    var __goPackage = `_message__`.goPackage
    var __ccGenericServices = `_message__`.ccGenericServices
    var __javaGenericServices = `_message__`.javaGenericServices
    var __pyGenericServices = `_message__`.pyGenericServices
    var __phpGenericServices = `_message__`.phpGenericServices
    var __deprecated = `_message__`.deprecated
    var __ccEnableArenas = `_message__`.ccEnableArenas
    var __objcClassPrefix = `_message__`.objcClassPrefix
    var __csharpNamespace = `_message__`.csharpNamespace
    var __swiftPrefix = `_message__`.swiftPrefix
    var __phpClassPrefix = `_message__`.phpClassPrefix
    var __phpNamespace = `_message__`.phpNamespace
    var __phpMetadataNamespace = `_message__`.phpMetadataNamespace
    var __rubyPackage = `_message__`.rubyPackage
    val __uninterpretedOption = (_root_.scala.collection.immutable.Vector.newBuilder[com.google.protobuf.descriptor.UninterpretedOption] ++= `_message__`.uninterpretedOption)
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __javaPackage = Option(_input__.readStringRequireUtf8())
        case 66 =>
          __javaOuterClassname = Option(_input__.readStringRequireUtf8())
        case 80 =>
          __javaMultipleFiles = Option(_input__.readBool())
        case 160 =>
          __javaGenerateEqualsAndHash = Option(_input__.readBool())
        case 216 =>
          __javaStringCheckUtf8 = Option(_input__.readBool())
        case 72 =>
          __optimizeFor = Option(com.google.protobuf.descriptor.FileOptions.OptimizeMode.fromValue(_input__.readEnum()))
        case 90 =>
          __goPackage = Option(_input__.readStringRequireUtf8())
        case 128 =>
          __ccGenericServices = Option(_input__.readBool())
        case 136 =>
          __javaGenericServices = Option(_input__.readBool())
        case 144 =>
          __pyGenericServices = Option(_input__.readBool())
        case 336 =>
          __phpGenericServices = Option(_input__.readBool())
        case 184 =>
          __deprecated = Option(_input__.readBool())
        case 248 =>
          __ccEnableArenas = Option(_input__.readBool())
        case 290 =>
          __objcClassPrefix = Option(_input__.readStringRequireUtf8())
        case 298 =>
          __csharpNamespace = Option(_input__.readStringRequireUtf8())
        case 314 =>
          __swiftPrefix = Option(_input__.readStringRequireUtf8())
        case 322 =>
          __phpClassPrefix = Option(_input__.readStringRequireUtf8())
        case 330 =>
          __phpNamespace = Option(_input__.readStringRequireUtf8())
        case 354 =>
          __phpMetadataNamespace = Option(_input__.readStringRequireUtf8())
        case 362 =>
          __rubyPackage = Option(_input__.readStringRequireUtf8())
        case 7994 =>
          __uninterpretedOption += _root_.scalapb.LiteParser.readMessage(_input__, com.google.protobuf.descriptor.UninterpretedOption.defaultInstance)
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder(_message__.unknownFields)
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    com.google.protobuf.descriptor.FileOptions(
        javaPackage = __javaPackage,
        javaOuterClassname = __javaOuterClassname,
        javaMultipleFiles = __javaMultipleFiles,
        javaGenerateEqualsAndHash = __javaGenerateEqualsAndHash,
        javaStringCheckUtf8 = __javaStringCheckUtf8,
        optimizeFor = __optimizeFor,
        goPackage = __goPackage,
        ccGenericServices = __ccGenericServices,
        javaGenericServices = __javaGenericServices,
        pyGenericServices = __pyGenericServices,
        phpGenericServices = __phpGenericServices,
        deprecated = __deprecated,
        ccEnableArenas = __ccEnableArenas,
        objcClassPrefix = __objcClassPrefix,
        csharpNamespace = __csharpNamespace,
        swiftPrefix = __swiftPrefix,
        phpClassPrefix = __phpClassPrefix,
        phpNamespace = __phpNamespace,
        phpMetadataNamespace = __phpMetadataNamespace,
        rubyPackage = __rubyPackage,
        uninterpretedOption = __uninterpretedOption.result(),
        unknownFields = if (_unknownFields__ == null) _message__.unknownFields else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[com.google.protobuf.descriptor.FileOptions] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      com.google.protobuf.descriptor.FileOptions(
        javaPackage = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        javaOuterClassname = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        javaMultipleFiles = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]),
        javaGenerateEqualsAndHash = __fieldsMap.get(scalaDescriptor.findFieldByNumber(20).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]),
        javaStringCheckUtf8 = __fieldsMap.get(scalaDescriptor.findFieldByNumber(27).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]),
        optimizeFor = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[_root_.scala.Option[_root_.scalapb.descriptors.EnumValueDescriptor]]).map(__e => com.google.protobuf.descriptor.FileOptions.OptimizeMode.fromValue(__e.number)),
        goPackage = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        ccGenericServices = __fieldsMap.get(scalaDescriptor.findFieldByNumber(16).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]),
        javaGenericServices = __fieldsMap.get(scalaDescriptor.findFieldByNumber(17).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]),
        pyGenericServices = __fieldsMap.get(scalaDescriptor.findFieldByNumber(18).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]),
        phpGenericServices = __fieldsMap.get(scalaDescriptor.findFieldByNumber(42).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]),
        deprecated = __fieldsMap.get(scalaDescriptor.findFieldByNumber(23).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]),
        ccEnableArenas = __fieldsMap.get(scalaDescriptor.findFieldByNumber(31).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Boolean]]),
        objcClassPrefix = __fieldsMap.get(scalaDescriptor.findFieldByNumber(36).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        csharpNamespace = __fieldsMap.get(scalaDescriptor.findFieldByNumber(37).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        swiftPrefix = __fieldsMap.get(scalaDescriptor.findFieldByNumber(39).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        phpClassPrefix = __fieldsMap.get(scalaDescriptor.findFieldByNumber(40).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        phpNamespace = __fieldsMap.get(scalaDescriptor.findFieldByNumber(41).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        phpMetadataNamespace = __fieldsMap.get(scalaDescriptor.findFieldByNumber(44).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        rubyPackage = __fieldsMap.get(scalaDescriptor.findFieldByNumber(45).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]),
        uninterpretedOption = __fieldsMap.get(scalaDescriptor.findFieldByNumber(999).get).map(_.as[_root_.scala.Seq[com.google.protobuf.descriptor.UninterpretedOption]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = DescriptorProtoCompanion.javaDescriptor.getMessageTypes().get(10)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = DescriptorProtoCompanion.scalaDescriptor.messages(10)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 999 => __out = com.google.protobuf.descriptor.UninterpretedOption
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 9 => com.google.protobuf.descriptor.FileOptions.OptimizeMode
    }
  }
  lazy val defaultInstance = com.google.protobuf.descriptor.FileOptions(
    javaPackage = _root_.scala.None,
    javaOuterClassname = _root_.scala.None,
    javaMultipleFiles = _root_.scala.None,
    javaGenerateEqualsAndHash = _root_.scala.None,
    javaStringCheckUtf8 = _root_.scala.None,
    optimizeFor = _root_.scala.None,
    goPackage = _root_.scala.None,
    ccGenericServices = _root_.scala.None,
    javaGenericServices = _root_.scala.None,
    pyGenericServices = _root_.scala.None,
    phpGenericServices = _root_.scala.None,
    deprecated = _root_.scala.None,
    ccEnableArenas = _root_.scala.None,
    objcClassPrefix = _root_.scala.None,
    csharpNamespace = _root_.scala.None,
    swiftPrefix = _root_.scala.None,
    phpClassPrefix = _root_.scala.None,
    phpNamespace = _root_.scala.None,
    phpMetadataNamespace = _root_.scala.None,
    rubyPackage = _root_.scala.None,
    uninterpretedOption = _root_.scala.Seq.empty
  )
  /** Generated classes can be optimized for speed or code size.
    */
  sealed abstract class OptimizeMode(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
    type EnumType = OptimizeMode
    def isSpeed: _root_.scala.Boolean = false
    def isCodeSize: _root_.scala.Boolean = false
    def isLiteRuntime: _root_.scala.Boolean = false
    def companion: _root_.scalapb.GeneratedEnumCompanion[OptimizeMode] = com.google.protobuf.descriptor.FileOptions.OptimizeMode
    final def asRecognized: _root_.scala.Option[com.google.protobuf.descriptor.FileOptions.OptimizeMode.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[com.google.protobuf.descriptor.FileOptions.OptimizeMode.Recognized])
  }
  
  object OptimizeMode extends _root_.scalapb.GeneratedEnumCompanion[OptimizeMode] {
    sealed trait Recognized extends OptimizeMode
    implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[OptimizeMode] = this
    /** Generate complete code for parsing, serialization,
      */
    @SerialVersionUID(0L)
    case object SPEED extends OptimizeMode(1) with OptimizeMode.Recognized {
      val index = 0
      val name = "SPEED"
      override def isSpeed: _root_.scala.Boolean = true
    }
    
    /** etc.
      * Use ReflectionOps to implement these methods.
      */
    @SerialVersionUID(0L)
    case object CODE_SIZE extends OptimizeMode(2) with OptimizeMode.Recognized {
      val index = 1
      val name = "CODE_SIZE"
      override def isCodeSize: _root_.scala.Boolean = true
    }
    
    /** Generate code using MessageLite and the lite runtime.
      */
    @SerialVersionUID(0L)
    case object LITE_RUNTIME extends OptimizeMode(3) with OptimizeMode.Recognized {
      val index = 2
      val name = "LITE_RUNTIME"
      override def isLiteRuntime: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends OptimizeMode(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
    
    lazy val values = scala.collection.immutable.Seq(SPEED, CODE_SIZE, LITE_RUNTIME)
    def fromValue(__value: _root_.scala.Int): OptimizeMode = __value match {
      case 1 => SPEED
      case 2 => CODE_SIZE
      case 3 => LITE_RUNTIME
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = com.google.protobuf.descriptor.FileOptions.javaDescriptor.getEnumTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = com.google.protobuf.descriptor.FileOptions.scalaDescriptor.enums(0)
  }
  implicit class FileOptionsLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.descriptor.FileOptions]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, com.google.protobuf.descriptor.FileOptions](_l) {
    def javaPackage: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getJavaPackage)((c_, f_) => c_.copy(javaPackage = Option(f_)))
    def optionalJavaPackage: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.javaPackage)((c_, f_) => c_.copy(javaPackage = f_))
    def javaOuterClassname: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getJavaOuterClassname)((c_, f_) => c_.copy(javaOuterClassname = Option(f_)))
    def optionalJavaOuterClassname: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.javaOuterClassname)((c_, f_) => c_.copy(javaOuterClassname = f_))
    def javaMultipleFiles: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getJavaMultipleFiles)((c_, f_) => c_.copy(javaMultipleFiles = Option(f_)))
    def optionalJavaMultipleFiles: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Boolean]] = field(_.javaMultipleFiles)((c_, f_) => c_.copy(javaMultipleFiles = f_))
    def javaGenerateEqualsAndHash: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getJavaGenerateEqualsAndHash)((c_, f_) => c_.copy(javaGenerateEqualsAndHash = Option(f_)))
    def optionalJavaGenerateEqualsAndHash: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Boolean]] = field(_.javaGenerateEqualsAndHash)((c_, f_) => c_.copy(javaGenerateEqualsAndHash = f_))
    def javaStringCheckUtf8: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getJavaStringCheckUtf8)((c_, f_) => c_.copy(javaStringCheckUtf8 = Option(f_)))
    def optionalJavaStringCheckUtf8: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Boolean]] = field(_.javaStringCheckUtf8)((c_, f_) => c_.copy(javaStringCheckUtf8 = f_))
    def optimizeFor: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.descriptor.FileOptions.OptimizeMode] = field(_.getOptimizeFor)((c_, f_) => c_.copy(optimizeFor = Option(f_)))
    def optionalOptimizeFor: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.descriptor.FileOptions.OptimizeMode]] = field(_.optimizeFor)((c_, f_) => c_.copy(optimizeFor = f_))
    def goPackage: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getGoPackage)((c_, f_) => c_.copy(goPackage = Option(f_)))
    def optionalGoPackage: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.goPackage)((c_, f_) => c_.copy(goPackage = f_))
    def ccGenericServices: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getCcGenericServices)((c_, f_) => c_.copy(ccGenericServices = Option(f_)))
    def optionalCcGenericServices: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Boolean]] = field(_.ccGenericServices)((c_, f_) => c_.copy(ccGenericServices = f_))
    def javaGenericServices: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getJavaGenericServices)((c_, f_) => c_.copy(javaGenericServices = Option(f_)))
    def optionalJavaGenericServices: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Boolean]] = field(_.javaGenericServices)((c_, f_) => c_.copy(javaGenericServices = f_))
    def pyGenericServices: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getPyGenericServices)((c_, f_) => c_.copy(pyGenericServices = Option(f_)))
    def optionalPyGenericServices: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Boolean]] = field(_.pyGenericServices)((c_, f_) => c_.copy(pyGenericServices = f_))
    def phpGenericServices: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getPhpGenericServices)((c_, f_) => c_.copy(phpGenericServices = Option(f_)))
    def optionalPhpGenericServices: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Boolean]] = field(_.phpGenericServices)((c_, f_) => c_.copy(phpGenericServices = f_))
    def deprecated: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getDeprecated)((c_, f_) => c_.copy(deprecated = Option(f_)))
    def optionalDeprecated: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Boolean]] = field(_.deprecated)((c_, f_) => c_.copy(deprecated = f_))
    def ccEnableArenas: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getCcEnableArenas)((c_, f_) => c_.copy(ccEnableArenas = Option(f_)))
    def optionalCcEnableArenas: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Boolean]] = field(_.ccEnableArenas)((c_, f_) => c_.copy(ccEnableArenas = f_))
    def objcClassPrefix: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getObjcClassPrefix)((c_, f_) => c_.copy(objcClassPrefix = Option(f_)))
    def optionalObjcClassPrefix: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.objcClassPrefix)((c_, f_) => c_.copy(objcClassPrefix = f_))
    def csharpNamespace: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getCsharpNamespace)((c_, f_) => c_.copy(csharpNamespace = Option(f_)))
    def optionalCsharpNamespace: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.csharpNamespace)((c_, f_) => c_.copy(csharpNamespace = f_))
    def swiftPrefix: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getSwiftPrefix)((c_, f_) => c_.copy(swiftPrefix = Option(f_)))
    def optionalSwiftPrefix: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.swiftPrefix)((c_, f_) => c_.copy(swiftPrefix = f_))
    def phpClassPrefix: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getPhpClassPrefix)((c_, f_) => c_.copy(phpClassPrefix = Option(f_)))
    def optionalPhpClassPrefix: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.phpClassPrefix)((c_, f_) => c_.copy(phpClassPrefix = f_))
    def phpNamespace: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getPhpNamespace)((c_, f_) => c_.copy(phpNamespace = Option(f_)))
    def optionalPhpNamespace: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.phpNamespace)((c_, f_) => c_.copy(phpNamespace = f_))
    def phpMetadataNamespace: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getPhpMetadataNamespace)((c_, f_) => c_.copy(phpMetadataNamespace = Option(f_)))
    def optionalPhpMetadataNamespace: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.phpMetadataNamespace)((c_, f_) => c_.copy(phpMetadataNamespace = f_))
    def rubyPackage: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getRubyPackage)((c_, f_) => c_.copy(rubyPackage = Option(f_)))
    def optionalRubyPackage: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Predef.String]] = field(_.rubyPackage)((c_, f_) => c_.copy(rubyPackage = f_))
    def uninterpretedOption: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.google.protobuf.descriptor.UninterpretedOption]] = field(_.uninterpretedOption)((c_, f_) => c_.copy(uninterpretedOption = f_))
  }
  final val JAVA_PACKAGE_FIELD_NUMBER = 1
  final val JAVA_OUTER_CLASSNAME_FIELD_NUMBER = 8
  final val JAVA_MULTIPLE_FILES_FIELD_NUMBER = 10
  final val JAVA_GENERATE_EQUALS_AND_HASH_FIELD_NUMBER = 20
  final val JAVA_STRING_CHECK_UTF8_FIELD_NUMBER = 27
  final val OPTIMIZE_FOR_FIELD_NUMBER = 9
  final val GO_PACKAGE_FIELD_NUMBER = 11
  final val CC_GENERIC_SERVICES_FIELD_NUMBER = 16
  final val JAVA_GENERIC_SERVICES_FIELD_NUMBER = 17
  final val PY_GENERIC_SERVICES_FIELD_NUMBER = 18
  final val PHP_GENERIC_SERVICES_FIELD_NUMBER = 42
  final val DEPRECATED_FIELD_NUMBER = 23
  final val CC_ENABLE_ARENAS_FIELD_NUMBER = 31
  final val OBJC_CLASS_PREFIX_FIELD_NUMBER = 36
  final val CSHARP_NAMESPACE_FIELD_NUMBER = 37
  final val SWIFT_PREFIX_FIELD_NUMBER = 39
  final val PHP_CLASS_PREFIX_FIELD_NUMBER = 40
  final val PHP_NAMESPACE_FIELD_NUMBER = 41
  final val PHP_METADATA_NAMESPACE_FIELD_NUMBER = 44
  final val RUBY_PACKAGE_FIELD_NUMBER = 45
  final val UNINTERPRETED_OPTION_FIELD_NUMBER = 999
  def of(
    javaPackage: _root_.scala.Option[_root_.scala.Predef.String],
    javaOuterClassname: _root_.scala.Option[_root_.scala.Predef.String],
    javaMultipleFiles: _root_.scala.Option[_root_.scala.Boolean],
    javaGenerateEqualsAndHash: _root_.scala.Option[_root_.scala.Boolean],
    javaStringCheckUtf8: _root_.scala.Option[_root_.scala.Boolean],
    optimizeFor: _root_.scala.Option[com.google.protobuf.descriptor.FileOptions.OptimizeMode],
    goPackage: _root_.scala.Option[_root_.scala.Predef.String],
    ccGenericServices: _root_.scala.Option[_root_.scala.Boolean],
    javaGenericServices: _root_.scala.Option[_root_.scala.Boolean],
    pyGenericServices: _root_.scala.Option[_root_.scala.Boolean],
    phpGenericServices: _root_.scala.Option[_root_.scala.Boolean],
    deprecated: _root_.scala.Option[_root_.scala.Boolean],
    ccEnableArenas: _root_.scala.Option[_root_.scala.Boolean],
    objcClassPrefix: _root_.scala.Option[_root_.scala.Predef.String],
    csharpNamespace: _root_.scala.Option[_root_.scala.Predef.String],
    swiftPrefix: _root_.scala.Option[_root_.scala.Predef.String],
    phpClassPrefix: _root_.scala.Option[_root_.scala.Predef.String],
    phpNamespace: _root_.scala.Option[_root_.scala.Predef.String],
    phpMetadataNamespace: _root_.scala.Option[_root_.scala.Predef.String],
    rubyPackage: _root_.scala.Option[_root_.scala.Predef.String],
    uninterpretedOption: _root_.scala.Seq[com.google.protobuf.descriptor.UninterpretedOption]
  ): _root_.com.google.protobuf.descriptor.FileOptions = _root_.com.google.protobuf.descriptor.FileOptions(
    javaPackage,
    javaOuterClassname,
    javaMultipleFiles,
    javaGenerateEqualsAndHash,
    javaStringCheckUtf8,
    optimizeFor,
    goPackage,
    ccGenericServices,
    javaGenericServices,
    pyGenericServices,
    phpGenericServices,
    deprecated,
    ccEnableArenas,
    objcClassPrefix,
    csharpNamespace,
    swiftPrefix,
    phpClassPrefix,
    phpNamespace,
    phpMetadataNamespace,
    rubyPackage,
    uninterpretedOption
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[google.protobuf.FileOptions])
}
