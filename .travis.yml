language: scala
dist: bionic
jdk: openjdk11

stages:
- name: test
- name: release
  if: (branch = master AND type = push AND repo = "scalapb/ScalaPB") OR (tag IS present)

scala:
- 2.12.10
- 2.13.1

env:
- TEST_SCRIPT=e2e.sh
- TEST_SCRIPT=mima.sh
- TEST_SCRIPT=proptest.sh

native_image: &native_image
  stage: release
  if: tag IS present
  scala: 2.13.1
  script: |
      ./.travis/make_native_image.sh protoc-gen-scala-${TRAVIS_TAG:1}-${TRAVIS_OS_NAME}-x86_64.zip
  deploy:
  - provider: releases
    on:
      tags: true
      repo: scalapb/ScalaPB
    api_key:
      secure: ZHv5KXgAHNvO6ZS2cv5SdQ43UMjcc1Bm7p9Q66z4NJoLNq5SY/Ln9ZFeUgoBMv+1SPvzL0GRWLxBxa4UYuFgFwRywlU8hQ1GF0ztZ35bvZUrFvTWp4sM62sdmSogHFDmgpG58IPNeQSPcZ+sYFhlWzvAz9hUCXzPPu6jeZSanew=
    file: protoc-gen-scala-${TRAVIS_TAG:1}-${TRAVIS_OS_NAME}-x86_64.zip
    skip_cleanup: true

jobs:
  include:
  #- env: SCALA_NATIVE
  #  scala: 2.11.12
  #  before_install:
  #  - sudo apt-get update
  #  - curl https://raw.githubusercontent.com/scala-native/scala-native/master/scripts/travis_setup.sh | bash -x
  #  script:
  #  - sbt ++2.11.12 runtimeNative/test lensesNative/test
  - env: EXAMPLES_AND_FORMATTING
    scala: 2.13.1
    script:
    - for d in examples/*; do cd "$d" && sbt test && cd ../..; done
    - sbt -J-Xmx4500M ++2.13.1 scalafmtCheck test:scalafmtCheck scalafmtSbtCheck
    - ./test_generated_code_checked_in.sh
  - stage: release
    env: UPDATE_DOCS
    scala: 2.13.1
    script: skip  # we use a scripted deploy to have before_deploy run first.
    deploy:
    - provider: script
      script: .travis/push_website.sh
  - <<: *native_image
    name: "Native Image (OSX)"
    os: osx
  - <<: *native_image
    name: "Native Image (Linux)"
    os: linux
  - stage: release
    if: tag IS present
    scala: 2.13.1
    env: DEPLOY_SCALAPBC
    script: sbt -J-Xmx4500M ++2.13.1 scalafmtCheck test:scalafmtCheck universal:packageBin
    deploy:
    - provider: releases
      on:
        tags: true
        repo: scalapb/ScalaPB
      api_key:
        secure: ZHv5KXgAHNvO6ZS2cv5SdQ43UMjcc1Bm7p9Q66z4NJoLNq5SY/Ln9ZFeUgoBMv+1SPvzL0GRWLxBxa4UYuFgFwRywlU8hQ1GF0ztZ35bvZUrFvTWp4sM62sdmSogHFDmgpG58IPNeQSPcZ+sYFhlWzvAz9hUCXzPPu6jeZSanew=
      file: scalapbc/target/universal/scalapbc-${TRAVIS_TAG:1}.zip
      skip_cleanup: true

# These directories are cached to S3 at the end of the build
cache:
  directories:
  - $HOME/.cache/coursier
  - $HOME/.ivy2/cache
  - $HOME/.sbt/1.0
  - $HOME/.sbt/boot

script:
- ./$TEST_SCRIPT

after_failure:
    - test $TEST_SCRIPT = "proptest.sh" && cat /tmp/protos.tgz | openssl enc -base64
    - echo Use base64 -d to get a tgz with the failing protos.

before_cache:
# Tricks to avoid unnecessary cache updates
- find $HOME/.ivy2/cache -name "ivydata-*.properties" -print -delete
- find $HOME/.sbt -name "*.lock" -print -delete

before_deploy:
- git config --global user.name "$USER"
- git config --global user.email "$TRAVIS_BUILD_NUMBER@$TRAVIS_COMMIT"
- openssl aes-256-cbc -K $encrypted_b42a4ae1e9e5_key -iv $encrypted_b42a4ae1e9e5_iv -in .travis/travis-deploy-key.enc -out .travis/travis-deploy-key -d
- chmod 600 .travis/travis-deploy-key
- eval "$(ssh-agent -s)"
- ssh-add .travis/travis-deploy-key
